// Code generated by hertz generator.

package demo

import (
	"context"
	"encoding/json"
	"fmt"
	"github.com/cloudwego/kitex/client/genericclient"

	client_provider "github.com/SchrodingerwithCat/apiGateway/http/biz/clientprovider"
	demo "github.com/SchrodingerwithCat/apiGateway/http/biz/model/demo"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// StuRegister .
// @router /student/add-student-info [POST]
func StuRegister(ctx context.Context, c *app.RequestContext) {
	var err error
	var req demo.Student
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	jsonReq, err := json.Marshal(req)

	if err != nil {
		fmt.Println("error:", err)
	}

	cli := client_provider.GetGenericClient(&ctx, c).(genericclient.Client)
	resp, err := cli.GenericCall(ctx, "Register", string(jsonReq))
	c.JSON(consts.StatusOK, resp)
}

// StuQuery .
// @router /student/query [GET]
func StuQuery(ctx context.Context, c *app.RequestContext) {
	var err error
	var req demo.QueryReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	jsonReq, err := json.Marshal(req)

	if err != nil {
		fmt.Println("error:", err)
	}

	cli := client_provider.GetGenericClient(&ctx, c).(genericclient.Client)
	resp, err := cli.GenericCall(ctx, "Query", string(jsonReq))
	c.JSON(consts.StatusOK, resp)
}
